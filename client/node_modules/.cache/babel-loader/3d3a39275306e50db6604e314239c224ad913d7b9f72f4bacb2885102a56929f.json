{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst New_Question = () => {\n  _s();\n  let [frontendquestions, setFrontendQuestions] = useState([]);\n  let [backendquestions, setBacktendQuestions] = useState([]);\n  let [fullstackquestions, setFullstackQuestions] = useState([]);\n  let [mobilequestions, setMobileQuestions] = useState([]);\n  const location = useLocation();\n  let [subjectIndex, setSubjectIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  let [questionIndex, setQuestionIndex] = useState(0);\n  let [optionIndex, setOptionIndex] = useState(0);\n  let [question, setQuestion] = useState(null);\n  const [token, setToken] = useState(sessionStorage.getItem('token'));\n  const [adminToken, setAdminToken] = useState(sessionStorage.getItem('adminToken'));\n  const [login, setLogin] = useState(false);\n  const Navigate = useNavigate();\n  useEffect(() => {\n    const fetching = {\n      method: 'GET',\n      url: `http://localhost:5000/api/frontendquestions`\n    };\n    axios(fetching).then(result => {\n      console.log(result);\n      console.log(result.data);\n    }).catch(error => {\n      console.log('Error Fetching frontend questions', error);\n    });\n  }, []);\n\n  /*\r\n  const optio = (e) => {\r\n      const div = e.currentTarget;\r\n      const buttons = document.querySelectorAll('.options');\r\n      buttons.forEach(button => {\r\n          button.classList.remove('selected');\r\n      });\r\n  \r\n      div.classList.add(\"selected\");\r\n      setSelectedOption(div.lastChild.innerHTML);\r\n  \r\n  }\r\n  \r\n  const submtAnswer = () => {\r\n      setQuestionIndex(++questionIndex);\r\n      console.log(data[subjectIndex].questions[questionIndex-1].correctAnswer)\r\n      setSelectedOption(\"\");\r\n      selectedOption && selectedOption === data[subjectIndex].questions[questionIndex-1].correctAnswer ?\r\n      setScore((prevScores) => prevScores + 2) : setScore((presentScores) => presentScores + 0);\r\n      {questionIndex === data[subjectIndex].questions.length && (Navigate('/result', {state: {result: score}}))};\r\n      \r\n      const buttons = document.querySelectorAll('.options');\r\n      buttons.forEach(button => {\r\n          button.classList.remove('selected');\r\n      });\r\n  \r\n  }  \r\n  useEffect(() => {\r\n     \r\n      {state && state.suitableQuestion ? \r\n      (setQuestionsToBeDisplayed(subjectIndex)) : \r\n      state && state.suitableQuestion2 ? \r\n      (setQuestionsToBeDisplayed(subjectIndex+1)) : \r\n      state && state.suitableQuestion3 ? \r\n      (setQuestionsToBeDisplayed(subjectIndex+2)) :\r\n      state && state.suitableQuestion4 ? \r\n      (setQuestionsToBeDisplayed(subjectIndex+3)) :\r\n      (<></>)\r\n  };\r\n  \r\n  }, [])\r\n  \r\n  const Logout = () => {\r\n      token ? (setToken(null) && localStorage.removeItem('token') && Navigate(\"user/login\")) : \r\n      (setAdminToken(null) && localStorage.removeItem(\"adminToken\") && Navigate(\"admin/login\")) ;\r\n      setLogin(false)\r\n    };*/\n\n  //console.log(selectedOption)\n  //console.log(score)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(New_Question, \"/rfu8//gZampIqbxlTeU6fASbbI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = New_Question;\nexport default New_Question;\nvar _c;\n$RefreshReg$(_c, \"New_Question\");","map":{"version":3,"names":["useEffect","useState","useLocation","useNavigate","Link","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","New_Question","_s","frontendquestions","setFrontendQuestions","backendquestions","setBacktendQuestions","fullstackquestions","setFullstackQuestions","mobilequestions","setMobileQuestions","location","subjectIndex","setSubjectIndex","selectedOption","setSelectedOption","score","setScore","questionIndex","setQuestionIndex","optionIndex","setOptionIndex","question","setQuestion","token","setToken","sessionStorage","getItem","adminToken","setAdminToken","login","setLogin","Navigate","fetching","method","url","then","result","console","log","data","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim Abul Haarith/Documents/Programming files/Fullstack Projects/Quiz App/client/src/components/New_Question.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\nconst New_Question = () => {\r\nlet [frontendquestions, setFrontendQuestions] = useState([]);\r\nlet [backendquestions, setBacktendQuestions] = useState([]);\r\nlet [fullstackquestions, setFullstackQuestions] = useState([]);\r\nlet [mobilequestions, setMobileQuestions] = useState([]);\r\nconst location = useLocation();\r\nlet [subjectIndex, setSubjectIndex] = useState(0);\r\nconst [selectedOption, setSelectedOption] = useState(\"\");\r\nconst [score, setScore] = useState(0);\r\nlet [questionIndex, setQuestionIndex] = useState(0);\r\nlet [optionIndex, setOptionIndex] = useState(0);\r\nlet [question, setQuestion] = useState(null);\r\nconst [token, setToken] = useState(sessionStorage.getItem('token'));\r\nconst [adminToken, setAdminToken] = useState(sessionStorage.getItem('adminToken'));\r\nconst [login, setLogin] = useState(false);\r\nconst Navigate = useNavigate(); \r\n\r\n\r\nuseEffect(() => {\r\n       const fetching =  {\r\n         method: 'GET',\r\n         url : `http://localhost:5000/api/frontendquestions`\r\n     }\r\n     axios(fetching)\r\n     .then((result) => {\r\n         console.log(result);\r\n         console.log(result.data)\r\n         })\r\n       . catch ((error) => {\r\n         console.log('Error Fetching frontend questions', error);\r\n       })\r\n }, [])\r\n\r\n\r\n/*\r\nconst optio = (e) => {\r\n    const div = e.currentTarget;\r\n    const buttons = document.querySelectorAll('.options');\r\n    buttons.forEach(button => {\r\n        button.classList.remove('selected');\r\n    });\r\n\r\n    div.classList.add(\"selected\");\r\n    setSelectedOption(div.lastChild.innerHTML);\r\n\r\n}\r\n\r\nconst submtAnswer = () => {\r\n    setQuestionIndex(++questionIndex);\r\n    console.log(data[subjectIndex].questions[questionIndex-1].correctAnswer)\r\n    setSelectedOption(\"\");\r\n    selectedOption && selectedOption === data[subjectIndex].questions[questionIndex-1].correctAnswer ?\r\n    setScore((prevScores) => prevScores + 2) : setScore((presentScores) => presentScores + 0);\r\n    {questionIndex === data[subjectIndex].questions.length && (Navigate('/result', {state: {result: score}}))};\r\n    \r\n    const buttons = document.querySelectorAll('.options');\r\n    buttons.forEach(button => {\r\n        button.classList.remove('selected');\r\n    });\r\n\r\n}  \r\nuseEffect(() => {\r\n   \r\n    {state && state.suitableQuestion ? \r\n    (setQuestionsToBeDisplayed(subjectIndex)) : \r\n    state && state.suitableQuestion2 ? \r\n    (setQuestionsToBeDisplayed(subjectIndex+1)) : \r\n    state && state.suitableQuestion3 ? \r\n    (setQuestionsToBeDisplayed(subjectIndex+2)) :\r\n    state && state.suitableQuestion4 ? \r\n    (setQuestionsToBeDisplayed(subjectIndex+3)) :\r\n    (<></>)\r\n};\r\n\r\n}, [])\r\n\r\nconst Logout = () => {\r\n    token ? (setToken(null) && localStorage.removeItem('token') && Navigate(\"user/login\")) : \r\n    (setAdminToken(null) && localStorage.removeItem(\"adminToken\") && Navigate(\"admin/login\")) ;\r\n    setLogin(false)\r\n  };*/\r\n\r\n//console.log(selectedOption)\r\n//console.log(score)\r\nreturn (\r\n        <>{/*\r\n       {token || adminToken ? ( \r\n     <div className=\"body\">\r\n      {token || adminToken ? (\r\n        <div className=\"flex welcome-div\">\r\n          <Link to={\"/subjects\"} style={{ textDecoration: \"none\", color: \"white\" }} className=\"header-login left\"><i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\r\n            Back</Link>\r\n          <Link style={{ textDecoration: \"none\", color: \"white\" }} className=\"header-login right\" onClick={Logout}>Logout</Link>\r\n        </div>\r\n      ) : (\r\n        Navigate(\"/user/login\")\r\n      )}\r\n      <div className=\"flex question\">\r\n        \r\n      <div>\r\n          <p className=\"italic\">Question {questionIndex+1} of {data ? data[subjectIndex].questions.length : \"\"} </p>\r\n          <h2>{data ? data[subjectIndex].questions[questionIndex].question : \"\"}\r\n          </h2> \r\n\r\n      </div>\r\n\r\n      <div id=\"option-container\">\r\n          <div className=\"flex start options\" onClick={optio}>\r\n              <h6>A</h6>\r\n              <p>{data ? data[subjectIndex].questions[questionIndex].options[optionIndex] : \"\"}</p>\r\n          </div>\r\n          <div className=\"flex start options\" onClick={optio}>\r\n              <h6>B</h6>\r\n              <p>{data ? data[subjectIndex].questions[questionIndex].options[optionIndex+1] : \"\"}</p>\r\n          </div>\r\n          <div className=\"flex start options\" onClick={optio}>\r\n              <h6>C</h6>\r\n              <p>{data ? data[subjectIndex].questions[questionIndex].options[optionIndex+2] : \"\"}</p>\r\n          </div>\r\n          <div className=\"flex start options\" onClick={optio}>\r\n             <h6>D</h6>\r\n              <p>{data ? data[subjectIndex].questions[questionIndex].options[optionIndex+3] : \"\"}</p>\r\n          </div>\r\n          <button onClick={submtAnswer} disabled={!selectedOption}>Submit Answer</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n            ) : (\r\n        <h3 className=\"error\">You have to be logged in before you can view this page, click <Link to={\"/user/login\"} style={{color: \"white\" }}> here </Link> to log in </h3>\r\n            )}*/}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default New_Question;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}